{% extends 'WaldoSushiBundle::base.html.twig' %}

{% block body %}
<h1>{% trans %}Bienvenu au Sushi Bar{% endtrans %}</h1>
<p>{% trans %}Cette page va vous présenter et donner accès aux différents tests disponnibles !{% endtrans %}</p>

<h2>Affichage d'une liste</h2>
<p>
    Cette page affiche une liste de sushi.<br />
    Elle a été conçus dans le but :
    <ul>
        <li>créer une suite de test fonctionnels (Waldo\SushiBundle\Tests\Controller\SushiBarControllerTest)</li>
        <li>présenter les fonctionnalités des librairies Nelmio\Alice et fzaninotto/faker pour la génération de fausse données</li>
        <li>l'utilisation de l'ORM Doctrine sans charger tout le Kernel</li>
        <li>la génération d'une base de données vide de donnée</li>
    </ul>
    <a href="{{ url("_sushi_list") }}">{% trans %}Accéder à la liste des sushi{% endtrans %}</a>
</p>

<h2>Formulaire simple</h2>
<p>
    Cette page affiche un simple formulaire pour ajouter un sushi.<br />
    Elle a été conçus dans le but :
    <ul>
        <li>présenter la relation entre un type de formulaire (Waldo\SushiBundle\Form\Type\SushiType) et une entité (Waldo\SushiBundle\Entity\Sushi)</li>
        <li>présenter les tests fonctionnels réalisables pour ce genre de formulaire</li>
        <li>utiliser des validateurs de données existants dans l'entité Sushi (@Assert\NotBlank(message="Ceci est un message d'erreur personnalisé."))</li>
        <li>avoir une méthode de controller (Waldo\SushiBundle\Controller::editSushiAction) très épuré</li>
    </ul>
    <br />
    <a href="{{ url("_sushi_edit") }}">{% trans %}Ajouter un nouveau sushi{% endtrans %}</a>
</p>


<h2>Multiples formulaires basé sur une entité</h2>
<p>
    Ces pages affichent un simple formulaire. Chacun met en oeuvre une action par rapport à la même entité (Waldo\SushiBundle\Entity\Utilisateur)<br />
    Elles ont été conçus dans le but :
    <ul>
        <li>d'avoir un type de formulaire adaptable à différent moment de vie d'une entité (Ajout, modification, modification d'un champ en particulier)</li>
        <li>utiliser un groupes de validation</li>
        <li>créer un validateur personnalisé (Waldo\SushiBundle\Validator\Constraints\PasswordValidator)</li>
    </ul>
    <br />
    <a href="{{ url("_utilisateur_edit") }}">{% trans %}Ajouter un nouvel utilisateur{% endtrans %}</a><br />
    <a href="{{ url("_utilisateur_show") }}">{% trans %}Modifier les données d'un utilisateur{% endtrans %}</a><br />
    <a href="{{ url("_sushi_edit") }}">{% trans %}Modifier le mot de passe d'un utilisateur{% endtrans %}</a>
</p>

{% endblock %}
